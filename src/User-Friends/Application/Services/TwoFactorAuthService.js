const speakeasy = require('speakeasy');
const qrcode = require('qrcode');

class TwoFactorAuthService {

    /* 
        Generates a secret key and a QR code URL for the user to scan with their device.
        @returns {object} - An object containing the secret key and the QR code URL
    */
    async generateSecret() {
        const secret = speakeasy.generateSecret({ length: 20 });
        const otpauth = secret.otpauth_url;
        const qrCodeUrl = await qrcode.toDataURL(otpauth);
        return {
            secret: secret.base32, // secret key to be stored in the database
            qrCodeUrl, // QR code URL to be displayed to the user registering the device
        };
    }

    /* 
        @param {string} secret - The secret key generated by the server
        @param {string} token - The token generated by the user's device
        @returns {boolean} - Returns true if the token is valid, false otherwise
        This function verifies the token generated by the user's device using the secret key.
    */
    async verifyToken(secret, token) {
        console.log("secret in 2FA verify:", secret);
        console.log("Token from request:", token);

        const verified = speakeasy.totp.verify({
            secret,
            encoding: 'base32',
            token,
        });
        return verified;
    }
    
}

module.exports = new TwoFactorAuthService();